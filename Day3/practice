//search operation

struct DataItem *search(int key) {
   
   int hashIndex = hashCode(key);
	
  
   while(hashArray[hashIndex] != NULL) {
	
      if(hashArray[hashIndex]->key == key)
         return hashArray[hashIndex];
			
      ++hashIndex;
		
 
      hashIndex %= SIZE;
   }

   return NULL;        
}

//Insert Operation

void insert(int key,int data) {
   struct DataItem *item = (struct DataItem*) malloc(sizeof(struct DataItem));
   item->data = data;  
   item->key = key;     

 
   int hashIndex = hashCode(key);

  
   while(hashArray[hashIndex] != NULL && hashArray[hashIndex]->key != -1) {
     
      ++hashIndex;
		
      hashIndex %= SIZE;
   }
	
   hashArray[hashIndex] = item;        
}

//Delete Operation

struct DataItem* delete(struct DataItem* item) {
   int key = item->key;

  
   int hashIndex = hashCode(key);

  
   while(hashArray[hashIndex] !=NULL) {
	
      if(hashArray[hashIndex]->key == key) {
         struct DataItem* temp = hashArray[hashIndex]; 
			
      
         hashArray[hashIndex] = dummyItem; 
         return temp;
      } 
		

      ++hashIndex;
		
      hashIndex %= SIZE;
   }  
	
   return NULL;        
}

